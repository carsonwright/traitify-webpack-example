var UUID;

UUID = require('node-uuid');

module.exports = {
  uuid: UUID.v4,
  hmac: function(str, type) {
    var hmac;
    if (!util.isString(type)) {
      type = 'base64';
    }
    if (!util.isString(ﬁ.app.secret)) {
      throw new ﬁ.error('Missing app secret setting.');
    }
    hmac = Crypto.createHmac('sha1', ﬁ.app.secret);
    return hmac.update(str).digest(type);
  },
  toSlug: function(str) {
    var char, from, i, to;
    from = 'ãàáäâẽèéëêìíïîõòóöôùúüûñç·/_,:;';
    to = 'aaaaaeeeeeiiiiooooouuuunc------';
    str = String(str).replace(/^\s+|\s+$/g, '').toLowerCase();
    str = str.replace(new RegExp(char, 'g'), (function() {
      var j, len, results;
      results = [];
      for (i = j = 0, len = from.length; j < len; i = ++j) {
        char = from[i];
        results.push(to.charAt(i));
      }
      return results;
    })());
    str = str.replace(/[^a-z0-9 -]/g, '').replace(/\s+/g, '-').replace(/-+/g, '-');
    return str;
  },
  id: function() {
    var i, possible, text;
    text = '';
    possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    i = 0;
    while (i < 8) {
      text += possible.charAt(Math.floor(Math.random() * possible.length));
      i++;
    }
    return text;
  }
};
