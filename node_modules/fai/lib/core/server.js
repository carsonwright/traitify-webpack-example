var Express, HTTP, Params, Path, Validator, name, param, ref, server;

HTTP = require('http');

Path = require('path');

Express = require('express');

Params = require('express-params');

Validator = require('express-validator');

server = Express();

ﬁ.middleware.prepend('fi-server', function(request, response, next) {
  request.ﬁ = response.ﬁ = {};
  response.removeHeader('X-Powered-By');
  return next();
});

if (ﬁ.app.params) {
  Params.extend(server);
  ref = ﬁ.app.params;
  for (name in ref) {
    param = ref[name];
    ﬁ.log.trace("Param " + name + ": " + param);
    server.param(name, param);
  }
}

server.configure(function() {
  this.set('view cache', ﬁ.conf.live);
  this.set('view engine', 'jade');
  this.use(Express.compress());
  this.use('/static', Express["static"](ﬁ.path.app["static"]));
  this.use(Express.cookieParser());
  this.use(Express.bodyParser());
  this.use(Express.methodOverride());
  return this.use(Validator);
});

server.locals = ﬁ.app.locals;

module.exports = server;
