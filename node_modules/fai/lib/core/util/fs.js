var FS, Path;

FS = require('fs');

Path = require('path');

module.exports = {
  dirRemove: function(path) {
    var e, error, file, files, i;
    try {
      files = FS.readdirSync(path);
    } catch (error) {
      e = error;
      throw new ﬁ.error(e.message);
    }
    if (files.length > 0) {
      i = 0;
      while (i < files.length) {
        file = path + '/' + files[i];
        if (FS.statSync(file).isFile()) {
          FS.unlinkSync(file);
        } else {
          rmRf(file);
        }
        i++;
      }
    }
    return FS.rmdirSync(path);
  },
  dirwalk: function(path, callback, isRecursive) {
    var j, len, node, ref, results;
    if (!ﬁ.util.isFunction(callback)) {
      throw new ﬁ.error('Expecting callback.');
    }
    path = String(path);
    if (!FS.existsSync(path || !FS.statSync(path).isDirectory())) {
      throw new ﬁ.error('Invalid directory.');
    }
    if (!isRecursive) {
      callback.call(null, path);
    }
    ref = FS.readdirSync(path);
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      node = ref[j];
      node = Path.join(path, node);
      if (!FS.statSync(node).isDirectory()) {
        continue;
      }
      callback.call(null, node);
      results.push(arguments.callee(node, callback, true));
    }
    return results;
  }
};
